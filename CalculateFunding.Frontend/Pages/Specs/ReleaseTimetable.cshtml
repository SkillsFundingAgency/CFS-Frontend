@page "{specificationId}"
@model CalculateFunding.Frontend.Pages.Specs.ReleaseTimetableModel
@using CalculateFunding.Frontend.Properties
@using CalculateFunding.Frontend.ViewModels.Specs
@{
    ViewData["Title"] = "Release Timetable";
}

@section NavBar {
    <partial name="_NavbarPartial" />
}

@section BreadCrumb{

    <div class="breadcrumbs">
        <ol>
            <li><a href="/">@BreadcrumbText.CalculateFunding</a></li>
            <li><a href="/specs">@BreadcrumbText.Specifications</a></li>
            <li>@Model.Specification.Name</li>
        </ol>
    </div>
}

@section BannerWholeBlue {
    <partial name="_SpecificationFullHeaderPartial" model="Model.Specification" />
}

@if (Model.PageBanner != null)
{
    <partial name="_PageBannerOperationPartial" model="Model.PageBanner" />
}

<div class="edit-policy-container">
    <div class="row">
        <div class="col-xs-12 policy-spec-what">
            <p class="withjs-hide">What is @Model.Specification.Name?</p>
            <div class="inline-collapse-container spacing-15-bottom">
                <div class="inline-collapse-heading withjs-show">
                    <i class="inline-collapse-arrow"></i>
                    <span>What is @Model.Specification.Name?</span>
                </div>
                <div class="inline-collapse-contents withjs-hide policy-spec-description">
                    @Model.Specification.Description.ReplaceLineBreaksForHtml()
                </div>
            </div>
        </div>
    </div>
    <ul class="nav nav-tabs nav-tabs-pagenavigation spacing-15-bottom" id="managePoliciesTabs" role="tablist">
        <li class="nav-item">
            <a id="nav-policy-tab" href="/specs/fundinglinestructure/@Model.Specification.Id" role="tab" aria-selected="false">Funding Line Structure</a>
        </li>
        <li class="nav-item">
            <a id="nav-policy-tab" href="/calcs/additionalcalculations/@Model.Specification.Id" role="tab" aria-selected="true">Additional calculations</a>
        </li>
        <li class="nav-item">
            <a id="nav-dataset-tab" href="/datasets/listdatasetschemas/@Model.Specification.Id" role="tab" aria-selected="false">
                <span class="provider-datasets-warning-tab">
                    <span>Datasets</span>
                    @if (!Model.HasProviderDatasetsAssigned)
                    {
                        <i class="material-icons icon-not-HasProviderDatasetsAssigned" style="color:black;">error</i>
                    }
                </span>
            </a>
        </li>
        <li class="nav-item active">
            <a id="nav-policy-tab" href="/specs/releasetimetable/@Model.Specification.Id" role="tab" aria-selected="true">Release timetable</a>
        </li>
        <li class="nav-item-right" id="approve-status">
            <approve-status-button params="publishStatus : '@Model.Specification.PublishStatus', stateChangeUrl : '/api/specs/@Model.Specification.Id/status', canApprove : canApproveSpec"></approve-status-button>
        </li>
    </ul>
    <div id="release-timetable" class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <h1 class="hero-description">Release date of funding to Navision</h1>
            <h2 class="hero-text">Set the date and time that the statement will be published externally for this funding stream</h2>
            <span>For example 12 11 2019</span>
            <div style="margin-bottom: 100px">
                <div style="float: left; padding-right: 30px">
                    <span style="display: block">Day</span>
                    <input style="display: block" id="funding-day" type="datetime" class="two-character" data-bind="value: fundingDay" onchange="if (parseInt(this.value) > 31) { this.value = 31 } else if (parseInt(this.value) < 1) { this.value = '01' } else if (parseInt(this.value, 10) < 10) { this.value = '0' + this.value; }" />
                </div>
                <div style="float: left; padding-right: 30px">
                    <span style="display: block">
                        Month
                    </span>
                    <input id="funding-month" type="datetime" class="two-character" data-bind="value: fundingMonth" onchange="if (parseInt(this.value) > 12) { this.value = 12 } else if (parseInt(this.value) < 1) { this.value = '01' } else if (parseInt(this.value, 10) < 10) { this.value = '0' + this.value; }" />
                </div>
                <div style="float: left; padding-right: 30px">
                    <span style="display: block">
                        Year
                    </span>
                    <input id="funding-year" type="datetime" class="four-character" data-bind="value: fundingYear" onchange="if (parseInt(this.value) > 2099) { this.value = 2099 } else if (parseInt(this.value) < 2000) { this.value = 2000 }" />
                </div>

            </div>
            <div class="clearfix"></div>
            <div style="padding-bottom: 50px">
                <span style="display: block">
                    Time
                </span>
                <input id="funding-time" type="time" class="six-character" min="00:00" max="23:59" required data-bind="value: fundingTime" />
            </div>

            <h1 class="hero-description">Release date of statement to providers</h1>
            <h2 class="hero-text">set the date and time that the statement will be published externally for this funding stream</h2>
            <span>For example 12 11 2019</span>
            <div style="margin-bottom: 100px">
                <div style="float: left; padding-right: 30px">
                    <span style="display: block">Day</span>
                    <input id="statement-day" type="datetime" class="two-character" data-bind="value: statementDay" onchange="if (parseInt(this.value) > 31) { this.value = 31 } else if (parseInt(this.value) < 1) { this.value = '01'} else if (parseInt(this.value, 10) < 10) { this.value = '0' + this.value; }" />
                </div>
                <div style="float: left; padding-right: 30px">
                    <span style="display: block">Month</span>
                    <input id="statement-month" type="datetime" class="two-character" data-bind="value: statementMonth" onchange="if (parseInt(this.value) > 12) { this.value = 12 } else if (parseInt(this.value) < 1) { this.value = '01'} else if (parseInt(this.value, 10) < 10) { this.value = '0' + this.value; }" />
                </div>
                <div style="float: left; padding-right: 30px">
                    <span style="display: block">Year</span>
                    <input id="statement-year" type="datetime" class="four-character" data-bind="value: statementYear" onchange="if (parseInt(this.value) > 2099) { this.value = 2099 } else if (parseInt(this.value) < 2000) { this.value = 2000}" />
                </div>
            </div>
            <div class="clearfix"></div>
            <div style="margin-bottom: 100px">
                <div style="float: left; padding-right: 30px">
                    <span style="display: block">Time</span>
                    <input id="statement-time" type="time" class="six-character" min="00:00" max="23:59" required data-bind="value: statementTime" />
                </div>
            </div>
            <div class="clearfix"></div>
            <div>
                <input type="button" class="button" value="Confirm changes" data-bind="click: saveTimetable" />

            </div>
            <div class="spacing-30-top"></div>
            <div data-bind="css: {'' : saveSuccessful(),'hidden' : !saveSuccessful()}, class: 'notifications-completed-successful-panel'">
                <span class="success">
                    Saved successfully
                </span>
            </div>
            <div data-bind="css: {'' : saveError(),'hidden' : !saveError()}, class: 'notification-panel-error'">
                <span class="error-message">There was an error processing your request. Please check and try again.</span>
            </div>
        </div>
    </div>

    @section scripts{
        <script type="text/javascript" asp-src-include="~/js/table.expander.js" asp-append-version="true"></script>
        <script asp-src-include="~/assets/libs/js/knockout-latest.js" asp-append-version="true" type="text/javascript"></script>
        <script src="~/js/releasetimetable.js"></script>
        <partial name="_ApproveStatusButtonPartial" />

        <script type="text/javascript">
        var viewModel = function (){
            canApproveSpec = ko.observable(@Model.DoesUserHavePermissionToApprove);
        };

        var releaseTimetableViewModel = new calculateFunding.releasetimetable.ReleaseTimetableViewModel("@Model.Specification.Id");

        ko.applyBindings(releaseTimetableViewModel, document.getElementById('release-timetable'));
        ko.applyBindings(viewModel, document.getElementById('approve-status'));
        </script>

    }
