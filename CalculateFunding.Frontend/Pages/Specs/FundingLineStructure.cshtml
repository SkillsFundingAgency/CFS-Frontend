@page "{specificationId}"
@model CalculateFunding.Frontend.Pages.Specs.FundingLineStructureModel
@using CalculateFunding.Frontend.Properties
@using CalculateFunding.Common.TemplateMetadata.Models
@using CalculateFunding.Frontend.ViewModels.Specs
@{
    ViewData["Title"] = "Funding Line Structure";
}

@section NavBar {
    <partial name="_NavbarPartial" />
}

@section BreadCrumb{

    <div class="breadcrumbs">
        <ol>
            <li><a href="/">@BreadcrumbText.CalculateFunding</a></li>
            <li><a href="/specs">@BreadcrumbText.Specifications</a></li>
            <li>@Model.Specification.Name</li>
        </ol>
    </div>
}

@section BannerWholeBlue {
    <partial name="_SpecificationFullHeaderPartial" model="Model.Specification" />
}

@if (Model.PageBanner != null)
{
    <partial name="_PageBannerOperationPartial" model="Model.PageBanner" />
}

<div class="edit-policy-container">
    <div class="row">
        <div class="col-xs-12 policy-spec-what ">
            <p class="withjs-hide">What is @Model.Specification.Name?</p>
            <div class="inline-collapse-container spacing-15-bottom">
                <div class="inline-collapse-heading withjs-show">
                    <i class="inline-collapse-arrow"></i>
                    <span>What is @Model.Specification.Name?</span>
                </div>
                <div class="inline-collapse-contents withjs-hide policy-spec-description">
                    @Model.Specification.Description.ReplaceLineBreaksForHtml()
                </div>
            </div>
        </div>
    </div>
    <ul class="nav nav-tabs nav-tabs-pagenavigation spacing-15-bottom" id="managePoliciesTabs" role="tablist">
        <li class="nav-item active">
            <a id="nav-policy-tab" href="/specs/fundinglinestructure/@Model.Specification.Id" role="tab" aria-selected="false">Funding Line Structure</a>
        </li>
        <li class="nav-item">
            <a id="nav-policy-tab" href="/calcs/additionalcalculations/@Model.Specification.Id" role="tab" aria-selected="true">Additional calculations</a>
        </li>
        <li class="nav-item">
            <a id="nav-dataset-tab" href="/datasets/listdatasetschemas/@Model.Specification.Id" role="tab" aria-selected="false">
                <span class="provider-datasets-warning-tab">
                    <span>Datasets</span>
                    @if (!Model.HasProviderDatasetsAssigned)
                    {
                        <i class="material-icons icon-not-HasProviderDatasetsAssigned">warning</i>
                    }
                </span>
            </a>
        </li>
        <li class="nav-item-right" id="approve-status">
            <approve-status-button params="publishStatus : '@Model.Specification.PublishStatus', stateChangeUrl : '/api/specs/@Model.Specification.Id/status', canApprove : canApproveSpec"></approve-status-button>
        </li>
    </ul>
    <div class="row">
        <div class="col-xs-12">
            <table class="cf funding-lines-table" id="funding-lines-table">
                <thead>
                    <tr>
                        <th width="20%" id="calculation-header-column" colspan="2" class="sticky-header">Structure</th>
                        <th width="40%" class="sticky-header">Name</th>
                        <th width="20%" class="sticky-header">Calculation Type</th>
                        <th width="20%" class="sticky-header">Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (KeyValuePair<string, TemplateMetadataContents> templateMetadataContents in Model.TemplateData)
                    {
                        var viewModel = new FundingLineViewModel
                        {
                            Calculations = Model.Calculations,
                            FundingLines = templateMetadataContents.Value.RootFundingLines,
                            TemplateMapping = Model.TemplateMappings[templateMetadataContents.Key],
                            FundingStreamId = templateMetadataContents.Key,
                            BorderThicknessMultiplier = 1
                        };

                         <partial name="_FundingLineRows" model="viewModel" />
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript" asp-src-include="~/js/table.expander.js" asp-append-version="true"></script>
    <script asp-src-include="~/assets/libs/js/knockout-latest.js" asp-append-version="true" type="text/javascript"></script>
    <partial name="_ApproveStatusButtonPartial" />

    <script type="text/javascript">
        $(".withjs-collapse-closedbydefault").addClass("collapse").removeClass("withjs-collapse-closedbydefault");

        $(".jscollapse-header").addClass("jscollapse-jsenabled-header");
        $(".jscollapse-active").addClass("jscollapse-jsenabled-active");

        var viewModel = function (){
            canApproveSpec = ko.observable(@Model.DoesUserHavePermissionToApprove);
        };

        ko.applyBindings(viewModel, document.getElementById('approve-status'));
    </script>

}