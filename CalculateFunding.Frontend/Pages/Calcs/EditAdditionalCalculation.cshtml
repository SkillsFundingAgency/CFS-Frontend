@page "{calculationId}"
@model CalculateFunding.Frontend.Pages.Calcs.EditAdditionalCalculationPageModel
@using System.Text
@using System.Web
@using CalculateFunding.Frontend.Properties
@using CalculateFunding.Frontend.Helpers
@{
    ViewData["Title"] = "Edit Additional Calculation";
}

@section NavBar {
    <partial name="_NavbarPartial" />
}

@section PermissionWarnings
    {
    <div id="permissions-banner-editcalc" class="row" style="display:none;" data-bind="visible:!doesUserHavePermissionToApproveOrEdit()">
        <div class="col-xs-12 permission-warning-banner">
            <div class="permission-warning-inner">
                <p class="permission-warning-text"><i class="material-icons permission-warning-icon">warning</i>You are not permitted to make changes to this calculation</p>
            </div>
        </div>
    </div>
}


    @section FormBannerLeft{

    }

    @section FormBannerRight{

    }

    @section BreadCrumb{
        <div class="breadcrumbs">
            <ol>
                <li><a href="/">@BreadcrumbText.CalculateFunding</a></li>
                <li><a href="/specs">@BreadcrumbText.Specifications</a></li>
                <li><a href="/calcs/additionalcalculations/@Model.SpecificationId">@Model.SpecificationName</a></li>
                <li>Edit Additional Calculation</li>
            </ol>
        </div>
    }
<div id="editAdditionalCalc">
    <div class="row">
        <div class="col-xs-12">
            <div class="row edit-calculation-header form-banner-container">
                <div class="col-md-7 col-xs-12">
                    <div class="row">
                        <div class="col-xs-12">
                            <strong>Funding Period : @Model.FundingPeriod.Name.FundingPeriodString()</strong>
                            <div class="hero-title">
                                Edit additional calculation
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                            <div class="bannerblue-button-container " id="approve-button-container">
                                <approve-status-button params="publishStatus : '@Model.Calculation.Current.PublishStatus', stateChangeUrl : '/api/specs/@Model.Calculation.SpecificationId/calculations/@Model.Calculation.Id/status', canApprove: canApproveCalculation"></approve-status-button>
                            </div>
                        </div>
                    </div>
                    <div>
                        <div>
                            <div class="form-group" data-bind="css: !calculationNameIsValid() ? 'validation-failed-block': ' '">
                                <a validationanchor-for="EditModel.Name"></a>
                                <label asp-for="EditModel.Name">Name</label>
                                <h4 class="material-icons-content-container"><i class="material-icons material-icons-left">error</i> <span class="faded-text">Use a descriptive unique name other users can understand</span></h4>
                                <input asp-for="EditModel.Name" class="form-control" type="text" data-bind="value: calculationName">
                                <div data-bind="hidden: calculationNameIsValid">
                                    <span class="validation-failed-label" data-bind="text: calculationNameMessage, css: !calculationNameIsValid() ? 'validation-failed-': ' '"></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div>
                        <div>
                            <div class="form-group">
                                <label asp-for="EditModel.ValueType">Value type</label>
                                <h4 class="material-icons-content-container"><i class="material-icons material-icons-left">error</i> <span class="faded-text">Select a value type</span></h4>

                                <select asp-for="EditModel.ValueType" class="form-control select-calculation-type" data-bind="value: calculationValueType">
                                    <option value="" disabled selected>Select a value type</option>
                                    <option value="Percentage">Percentage</option>
                                    <option value="Number">Number</option>
                                    <option value="Currency">Currency</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div>
                        <a href="/calcs/Compare/@Model.Calculation.Id">View calculation history</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row edit-calculation" id="edit-calculation">
        
        <div class="col-xs-12 edit-calculation-editor-wrapper">
            <div class="edit-calculation-editor-container">
                <div class="edit-calculation-container-header">
                    <strong>Calculation script</strong>
                </div>
                <div id="monacoeditor" class="monaco-editor-container" data-bind="monacoEditor: sourceCode, monacoEditorOptions: {editorCreatedCallback: function(){registerMonacoProviders($root)}}"></div>

                <div class="edit-calculation-container-footer spacing-30">
                    <input type="button" class="button-calculation" value="Build calculation" data-bind="click: buildCalculation, disable: !canBuildCalculation()" id="build-calculation-button" />
                    <span class="build-output-message"><i class="material-icons material-icons-left">info</i>Your calculation's build output must be successful before you can save it.</span>
                </div>
            </div>
        </div>
        <div class="col-xs-12">
            <div class="build-output no-border">
                <strong>Build output</strong>
                <div data-bind="text: buildOutput"></div>
                <div data-bind="with: compilerResponse" id="compiler-response">
                    Code compiled successfully: <span data-bind="text: compilerOutput.success"></span>

                    <div class="compiler-messages" data-bind="foreach: compilerOutput.compilerMessages">
                        <span data-bind="text: severity"></span>: <span data-bind="text: message"></span>
                    </div>
                </div>
            </div>

            <div class="spacing-15">
                <input type="button" class="button" value="Save calculation" data-bind="click: saveCalculation, enable: canSaveCalculation" id="save-calculation-button" />
            </div>
            <div>
                <a href="/calcs/additionalcalculations/@Model.SpecificationId" class="govuk-back-link" id="link-back">Back</a>
            </div>
        </div>
    </div>

</div>


@section scripts{
    <script asp-src-include="~/assets/libs/js/knockout-latest.js" type="text/javascript" asp-append-version="true"></script>
    <script asp-src-include="~/assets/libs/js/monaco/vs/loader.js" type="text/javascript" asp-append-version="true"></script>
    <script asp-src-include="~/js/provider.completion.vb.js" type="text/javascript" asp-append-version="true"></script>
    <script asp-src-include="~/js/bindingHandler.monacoEditor.js" type="text/javascript" asp-append-version="true"></script>
    <script asp-src-include="~/js/editadditionalcalculation.js" type="text/javascript" asp-append-version="true"></script>

    <partial name="_ApproveStatusButtonPartial" />

    <script type="text/javascript">
    var editCalculationElement = document.getElementById("editAdditionalCalc");
    if (editCalculationElement) {
        var editViewModelOptions = {
            calculationId: "@Model.Calculation.Id",
            calculationName: "@Model.Calculation.Name",
            calculationValueType:"@Model.Calculation.Current.ValueType.ToString()",
            specificationId: "@Model.SpecificationId",
            fundingStreams: @Html.Raw(Model.FundingStreams),
            newEditCalculationPageBeEnabled: "@Model.ShouldNewEditCalculationPageBeEnabled",
            existingSourceCode: "@Html.Raw(HttpUtility.JavaScriptStringEncode(Model.Calculation.Current.SourceCode))"
        };

        var viewModel = new calculateFunding.editadditionalcalculation.EditAdditionalCalculationViewModel(editViewModelOptions);
        viewModel.loadIntellisenseContext();
        viewModel.doesUserHavePermissionToApproveOrEdit(@Model.DoesUserHavePermissionToApproveOrEdit);

        ko.applyBindings(viewModel, editCalculationElement);

        ko.applyBindings(viewModel, document.getElementById("permissions-banner-editcalc"));
    }
    </script>
}
